# https://docs.microsoft.com/en-us/azure/devops/pipelines/ecosystems/kubernetes/deployment-strategies?view=azure-devops#canary-deployments-for-kubernetes
# https://docs.microsoft.com/en-us/azure/devops/pipelines/ecosystems/kubernetes/bake?view=azure-devops
# https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/kubernetes-manifest?view=azure-devops 
# end-to-end https://docs.microsoft.com/en-us/azure/devops/pipelines/ecosystems/kubernetes/canary-demo?view=azure-devops&tabs=yaml 
trigger: none

parameters:
  - name: buildInput
    type: number
    
variables:
  - template: .ci/yamlVariables.yml

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: DeployCanary
    displayName: Deploy canary
    jobs:
      - deployment: Deploycanary
        environment: experdaysaks.canarydemo
        displayName: Canary Deployment
        strategy:
          runOnce:
            preDeploy:
              steps:
              - checkout: self
              
              # https://stackoverflow.com/questions/59210148/error-found-in-chart-yaml-but-missing-in-charts-directory-mysql
              - script: |
                  helm dependency update samples/BikeSharingApp/charts
                  
                  echo "helm repo add && helm repo update"
                  helm repo add stable https://charts.helm.sh/stable
                  helm repo update
                workingDirectory: '$(System.DefaultWorkingDirectory)'
                displayName: help setup 

              - task: KubernetesManifest@0
                name: bake # important, to be referenced later.
                displayName: bake helm chart
                inputs:
                  action: 'bake'
                  helmChart: samples/BikeSharingApp/ReservationEngine/charts/reservationengine
                  releaseName: 'miferrac-reservationEngine'
                  overrides: |
                    image.repository:phenixita/reservationengine
                    image.tag:${{ parameters.buildInput }}
              - task: PublishPipelineArtifact@1
                inputs:
                  targetPath: $(bake.manifestsBundle)
                  artifact: 'helmBakedChart'
                  publishLocation: 'pipeline'
            deploy:
              steps:
              # - script:  mv baked-template*.yaml baked-template.yaml
              #   workingDirectory: $(Pipeline.Workspace)/helmBakedChart/
              #   displayName: Rename baked chart
            
              # - script: cat $(Pipeline.Workspace)/helmBakedChart/baked-template.yaml
              #   displayName: Fake Deployment
              
              - task: KubernetesManifest@0
                inputs:
                  action: 'deploy'
                  # kubernetesServiceConnection: 'experdaysaks-expertdaysakscluster-canarydemo-1614031660916'
                  # namespace: 'canarydemo'
                  strategy: 'canary'
                  percentage: '50'
                  manifests: '$(Pipeline.Workspace)/helmBakedChart/**'
                displayName: deploy app updates
  - stage: PromoteRejectCanary
    displayName: Promote or Reject canary
    dependsOn: DeployCanary
    condition: succeeded()

    jobs:
    - deployment: PromoteCanary
      displayName: Promote Canary
      pool: 
        vmImage: Ubuntu-latest
      environment: 'experdaysaks.canarydemo'
      strategy:
        runOnce:
          deploy:
            steps:
            - task: KubernetesManifest@0
              displayName: promote canary
              inputs:
                action: 'promote'
                strategy: 'canary'
                manifests: '$(Pipeline.Workspace)/helmBakedChart/**'

  - stage: RejectCanary
    displayName: Reject canary
    dependsOn: PromoteRejectCanary
    condition: failed()

    jobs:
    - deployment: RejectCanary
      displayName: Reject Canary
      pool: 
        vmImage: Ubuntu-latest
      environment: 'experdaysaks.canarydemo'
      strategy:
        runOnce:
          deploy:
            steps:            
            - task: KubernetesManifest@0
              displayName: reject canary
              inputs:
                action: 'reject'
                strategy: 'canary'
                manifests: '$(Pipeline.Workspace)/helmBakedChart/**'