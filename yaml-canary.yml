# https://docs.microsoft.com/en-us/azure/devops/pipelines/ecosystems/kubernetes/deployment-strategies?view=azure-devops#canary-deployments-for-kubernetes
# https://docs.microsoft.com/en-us/azure/devops/pipelines/ecosystems/kubernetes/bake?view=azure-devops
# https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/kubernetes-manifest?view=azure-devops 
# end-to-end https://docs.microsoft.com/en-us/azure/devops/pipelines/ecosystems/kubernetes/canary-demo?view=azure-devops&tabs=yaml 
trigger: none

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Deployment
    displayName: Deployment to AKS cluster (miferrac ns)
    jobs:
      - deployment: canaryDeployment
        environment: experdaysaks.miferrac
        displayName: Canary Deployment
        strategy:
          canary:
            increments: [10,20]
            preDeploy:
              steps:
              - checkout: self
              
              # https://stackoverflow.com/questions/59210148/error-found-in-chart-yaml-but-missing-in-charts-directory-mysql
              - script: |
                  helm dependency update samples/BikeSharingApp/charts
                  
                  echo "helm repo add && helm repo update"
                  helm repo add stable https://charts.helm.sh/stable
                  helm repo update
                workingDirectory: '$(System.DefaultWorkingDirectory)'
                displayName: help setup 

              - task: KubernetesManifest@0
                name: bake # important, to be referenced later.
                inputs:
                  action: 'bake'
                  namespace: 'miferrac'
                  helmChart: 'samples/BikeSharingApp/charts'
                  releaseName: 'miferrac-bike'
                  overrides: |
                    gateway.image.repository:expertdaysregistry.azurecr.io/gateway
                    gateway.ingress.hosts:{miferrac.gateway.5.6.7.8.nip.io}
                    gateway.ingress.annotations."kubernetes\.io/ingress\.class":traefik
                    gateway.image.tag:$(Build.BuildId)
                    bikesharingweb.ingress.hosts:{miferrac.bikesharingweb.5.6.7.8.nip.io}
                    bikesharingweb.ingress.annotations."kubernetes\.io/ingress\.class":traefik
                    bikes.image.repository:expertdaysregistry.azurecr.io/bikes
                    bikes.image.tag:$(Build.BuildId)
                    billing.image.repository:expertdaysregistry.azurecr.io/billing
                    billing.image.tag:$(Build.BuildId)
                    reservation.image.repository:expertdaysregistry.azurecr.io/reservation
                    reservation.image.tag:$(Build.BuildId)
                    users.image.repository:expertdaysregistry.azurecr.io/users
                    users.image.tag:$(Build.BuildId)
                    reservationengine.image.repository:expertdaysregistry.azurecr.io/reservationengine
                    reservationengine.image.tag:$(Build.BuildId)
                    populatedatabase.image.repository:expertdaysregistry.azurecr.io/populatedatabase
                    populatedatabase.image.tag:$(Build.BuildId)
                    bikesharingweb.image.repository:expertdaysregistry.azurecr.io/bikesharingweb
                    bikesharingweb.image.tag:$(Build.BuildId)
                displayName: bake helm chart
            deploy:
              steps: 
              - task: KubernetesManifest@0
                inputs:
                  action: 'deploy'
                  kubernetesServiceConnection: 'miferrac-expertdaysakscluster-miferrac-1613077274355'
                  namespace: 'miferrac'
                  strategy: 'canary'
                  percentage: '$(strategy.increment)'
                displayName: deploy app updates
            postRouteTraffic: 
              pool: server
              steps:
              - task: ManualValidation@0
                inputs:
                  notifyUsers: 'miferrac@microsoft.com'
                  instructions: 'check the telemetry'
                displayName: Validate
            on: 
              failure:
                steps:
                  - task: KubernetesManifest@0
                    inputs:
                      action: 'reject'
                      kubernetesServiceConnection: 'miferrac-expertdaysakscluster-miferrac-1613077274355'
                      namespace: 'miferrac'
                      strategy: 'canary'
                      manifests: '$(bake.manifestsBundle)'
              success:
                steps:
                  - task: KubernetesManifest@0
                    inputs:
                      action: 'promote'
                      kubernetesServiceConnection: 'miferrac-expertdaysakscluster-miferrac-1613077274355'
                      namespace: 'miferrac'
                      strategy: 'canary'
                      manifests: '$(bake.manifestsBundle)'