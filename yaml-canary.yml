# https://docs.microsoft.com/en-us/azure/devops/pipelines/ecosystems/kubernetes/deployment-strategies?view=azure-devops#canary-deployments-for-kubernetes
# https://docs.microsoft.com/en-us/azure/devops/pipelines/ecosystems/kubernetes/bake?view=azure-devops
# https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/kubernetes-manifest?view=azure-devops 
# end-to-end https://docs.microsoft.com/en-us/azure/devops/pipelines/ecosystems/kubernetes/canary-demo?view=azure-devops&tabs=yaml 
trigger: none

parameters:
  - name: buildInput
    type: number
    
variables:
  - template: .ci/yamlVariables.yml

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Deployment
    displayName: Deployment to AKS cluster (miferrac ns)
    jobs:
      - deployment: canaryDeployment
        environment: experdaysaks.miferrac
        displayName: Canary Deployment
        strategy:
          runOnce:
            preDeploy:
              steps:
              - checkout: self
              
              # https://stackoverflow.com/questions/59210148/error-found-in-chart-yaml-but-missing-in-charts-directory-mysql
              - script: |
                  helm dependency update samples/BikeSharingApp/charts
                  
                  echo "helm repo add && helm repo update"
                  helm repo add stable https://charts.helm.sh/stable
                  helm repo update
                workingDirectory: '$(System.DefaultWorkingDirectory)'
                displayName: help setup 

              - task: KubernetesManifest@0
                name: bake # important, to be referenced later.
                displayName: bake helm chart
                inputs:
                  action: 'bake'
                  namespace: 'miferrac'
                  helmChart: samples/BikeSharingApp/ReservationEngine/charts/reservationengine
                  releaseName: 'miferrac-reservationEngine'
                  overrides: |
                    image.repository:phenixita/reservationEngine
                    image.tag:${{ parameters.buildInput }}
              - task: PublishPipelineArtifact@1
                inputs:
                  targetPath: $(bake.manifestsBundle)
                  artifact: 'helmBakedChart'
                  publishLocation: 'pipeline'
            deploy:
              steps:
              - script:  mv baked-template*.yaml baked-template.yaml
                workingDirectory: $(Pipeline.Workspace)/helmBakedChart/
                displayName: Rename baked chart
            
              - script: cat $(Pipeline.Workspace)/helmBakedChart/baked-template.yaml
                displayName: Fake Deployment
              - task: KubernetesManifest@0
                inputs:
                  action: 'deploy'
                  kubernetesServiceConnection: 'miferrac-expertdaysakscluster-miferrac-1613077274355'
                  namespace: 'miferrac'
                  strategy: 'canary'
                  percentage: '50'
                  manifests: '$(Pipeline.Workspace)/helmBakedChart'
                displayName: deploy app updates
            # postRouteTraffic: 
            #   pool: server
            #   steps:
            #   - task: Delay@1
            #     inputs:
            #       delayForMinutes: '1'
            #   - task: ManualValidation@0
            #     condition: eq($(strategy.increment),'10')
            #     inputs:
            #       notifyUsers: 'miferrac@microsoft.com'
            #       instructions: 'sdfg'
            # on: 
            #   failure:
            #     steps:
            #       - task: KubernetesManifest@0
            #         inputs:
            #           action: 'reject'
            #           kubernetesServiceConnection: 'miferrac-expertdaysakscluster-miferrac-1613077274355'
            #           namespace: 'miferrac'
            #           strategy: 'canary'
            #           manifests: '$(bake.manifestsBundle)'
            #   success:
            #     steps:
            #       - task: KubernetesManifest@0
            #         inputs:
            #           action: 'promote'
            #           kubernetesServiceConnection: 'miferrac-expertdaysakscluster-miferrac-1613077274355'
            #           namespace: 'miferrac'
            #           strategy: 'canary'
            #           manifests: '$(bake.manifestsBundle)'